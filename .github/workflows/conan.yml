name: Conan
on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [ develop ]

jobs:
  build_x64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: ./.github/actions/install-build-deps
      - uses: ./.github/actions/conan-install-build-package-for-profile
        with:
          host-profile: ${{ github.workspace }}/conan/profile
          build-dir: build_x64
#      - uses: actions/upload-artifact@v3
#        with:
#          name: leosac-package-x64
#          path: build_x64/package/
#          retention-days: 2
      - name: Create Docker Image
        run: docker build -t ghcr.io/${{ github.actor }}/leosac_test:${{ github.sha }} -f tests/Dockerfile build_x64/package
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push docker image
        run: docker push ghcr.io/${{ github.actor }}/leosac_test:${{ github.sha }}
      - name: Run ctest
        run: ctest . || true
        working-directory: build_x64
      - name: Aggregate unit test result
        run: mkdir -p gtest_result/agg && python3 ../merge_result.py gtest_result/*.xml > gtest_result/agg/result.xml
        working-directory: build_x64/
      - uses: dorny/test-reporter@v1
        with:
          name: UnitTest
          path: ${{ github.workspace }}/build_x64/gtest_result/agg/*.xml
          reporter: java-junit
          fail-on-error: 'false'

  build_arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: ./.github/actions/install-build-deps
      - name: Install additional compiler
        run: >
          sudo apt-get install -y gcc-10-aarch64-linux-gnu g++-10-aarch64-linux-gnu
      - uses: ./.github/actions/conan-install-build-package-for-profile
        with:
          host-profile: ${{ github.workspace }}/conan/profilearm64
          build-dir: build_arm64
#      - uses: actions/upload-artifact@v3
#        with:
#          name: leosac-package-arm64
#          path: build_arm64/package/
#          retention-days: 2

  build_arm-linux-gnueabi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: ./.github/actions/install-build-deps
      - name: Install additional compiler
        run: >
          sudo apt-get install -y g++-10-arm-linux-gnueabi gcc-10-arm-linux-gnueabi
      - uses: ./.github/actions/conan-install-build-package-for-profile
        with:
          host-profile: ${{ github.workspace }}/conan/profilearm32
          build-dir: build_arm32
#      - uses: actions/upload-artifact@v3
#        with:
#          name: leosac-package-arm32
#          path: build_arm32/package/
#          retention-days: 2
      - uses: actions/upload-artifact@v3
        with:
          name: leosac-package-arm32
          path: build_arm32/package/
          retention-days: 2

  integration_test:
    runs-on: ubuntu-latest
    needs: [build_x64]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/install-build-deps
      - name: Install MS package (keys and such)
        run: >
          wget https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && 
          sudo dpkg -i packages-microsoft-prod.deb &&
          rm packages-microsoft-prod.deb
      - name: Install dotnet
        run: >        
          sudo apt-get update &&
          sudo apt-get install -y apt-transport-https && 
          sudo apt-get update &&
          sudo apt-get install -y dotnet-sdk-6.0
      - name: Configure docker if needed
        run: docker swarm init || true
      - name: Pull leoasc test image
        run: docker pull ghcr.io/${{ github.actor }}/leosac_test:${{ github.sha }} && docker tag ghcr.io/${{ github.actor }}/leosac_test:${{ github.sha }} leosac_test
      - name: Run integrations tests
        run: LEOSAC_INTEGRATION_TEST_DATA_ROOT=${{ github.workspace }}/tests dotnet test --logger "trx;LogFileName=test-results.trx"
        working-directory: LeosacSharp
      - uses: dorny/test-reporter@v1
        with:
          name: Integration Tests
          path: LeosacSharp/LeosacIntegrationTests/TestResults/test-results.trx
          reporter: dotnet-trx
          fail-on-error: 'false'
